다차원 배열
==================================================
using System;

namespace ConsoleApp6
{
    class Program
    {
        static void Main(string[] args)
        {
            int[,] a =
             {
                {10,20 }, {30,40},{50,60}
            };
            a[1, 1]=0;

            Console.WriteLine("a[0,0]="+a[0, 0]+'\t'+"a[0,1]="+a[0, 1]);
            Console.WriteLine("a[1,0]="+a[1, 0]+'\t'+"a[1,1]="+a[1, 1]);
            Console.WriteLine("a[2,0]="+a[2, 0]+'\t'+"a[2,1]="+a[2, 1]);
        } 
    }
}

================================================================
a[0,0]=10       a[0,1]=20
a[1,0]=30       a[1,1]=0
a[2,0]=50       a[2,1]=60
=====================================================


Colab객체지향 언어 객체를 만들어서 쓴다

* 참고사항

circus AR 앱 플랫폼 3D 콘텐츠 개발
-VR 앱 개발(Vive, Oculus Rift, GearVR, Cardboard, Hololens 등 관련 개발)
-웨어러블 디바이스 활용 MR 솔루션, 플랫폼, 콘텐츠 개발
-API, 회원 DB, 결제 연동
-LBS 관련 콘텐츠 개발
-Unity 3D를 통한 게임 개발
-AR·VR 연계 가능 기술 개발

자격요건
- Unity3D 툴 활용 가능하신 분
- UGUI, NGUI 활용 가능하신 분
- C#에 대한 이해도가 있으신 분
- AR SDK를 활용한 앱 개발 경험을 보유하신 분
- 동종 및 관련 업계 앱, 콘텐츠 개발 경험자
- AR·VR, MR, Kinect 등 New Media Contents 개발에 대한 관심이 있으신 분
- 내부 커뮤니케이션과 협업이 원활하신 분
- 해외 여행 결격 사유 없는 자
※ 포트폴리오 필수(형식, 양식 관계없음)
**프로젝트 시연 영상 또는 이미지
**프로젝트 구현 코드 또는 개인 계정 Github 링크 기재

우대사항
- 동종업계 및 관련 업계 앱, 콘텐츠 개발 경력이 있으신 분
- Computer Graphics 및 Unity Shader에 대한 전문적인 이해가 있으신 분
- OpenCV 활용 프로젝트 경험을 보유하신 분
- Vive, Google Cardboard 등 VR 프로젝트 경험이 있으신 분
- 컴퓨터, IT 등 관련 전공자 및 국가 공인 자격증 소지자
- AR/VR 콘텐츠, 플랫폼에 대한 관심도가 높으신 분


================================================
캐논크래커
주요업무
• 담당업무게임 시스템 및 컨텐츠 개발
• 게임 플레이 로직 개발
• 프로토타입 구현

자격요건
• 유니티 엔진 개발 경험(C# / UGUI)
• 최적화 업무 경험
• 알고리즘, 자료구조, 객체지향 개발 경험
• 프로젝트 초기부터 런칭까지 경험
• 긍정적이고 책임감 있는 마인드
• 원활한 커뮤니케이션 스킬

우대사항
• 모바일, PC 개발 경험
• Third- Party 라이브러리 및 SDK 사용 경험
• 유니티 그래픽 Shader의 제작 및 최적화 경험
• Android, IOS Native 개발 경험 
• 빠른 프로토타이핑 능력
==============================================

베이스디
베이스디 - 3D 아트웍 및 프랍개발 (Unity3D/Unreal)
베이스디 - 3D 아트웍 및 프랍개발 (Unity3D/Unreal)
3D 아트웍 및 프랍개발 (Unity3D/Unreal)
베이스디
서울.한국
#퇴사율5%이하#50명이하#설립10년이상#음료#간식#교육비#IT, 컨텐츠
저희 베이스디는 신사업을 주도하는 AR/VR 및 모바일 콘텐츠 제작 전문회사입니다. 해마다 연매출이  큰 폭으로 성장하고 있으며 SI 및 자사 플랫폼 제작 등 다양한 프로젝트를 진행하고 있습니다. 

향후 4차 산업혁명의 중심에 있는 AR/VR 기술을 다년간 연구해오고 개발해 온 기업으로써 직원과 회사의 성장에 큰 관심을 두고 미래를 준비하고 있습니다. 게임/교육/메타버스 전반에 걸친 다양한 기획 및 기술개발력을 바탕으로 본인의 작품이 필드에서 다양하게 사용되는 모습을 확인하실 수 있습니다.

베이스디의 디자인 역량을 한층 Level up 시켜주실 3D아트웍 전반적인 영역에서 다양한 경험을 가지고 계신 멋진 디자이너분을 찾고있습니다.

베이스디와 함께 즐거운 환경에서 특별한 콘텐츠를 개발하고 싶으신 분들께서는 주저 말고 문을 두드려주시기 바랍니다.

주요업무
• 3D 디자인 분야 (AR/VR 콘텐츠 내 3D 구현 전반)
• 3D 캐릭터 디자인

자격요건
ㆍ기본 디자인툴 및 2D/3D 디자인 능력.
(Adobe Photoshop/illustrator/3Dmaya/3Dmax/Blender 등)

우대사항
ㆍ유니티 사용 가능자 우대(숙련까지는 아니어도 유 경험자 포함)
ㆍ2D 작화능력, 3D 모델링 능력 등 다양한 스킬 능력 보유자 환영.
ㆍ다양한 툴 활용가능자 및 새로운 툴을 잘 다루는 분 우대.
ㆍ동종업계 경력자 우대.
ㆍ팀원들과 원할하게 소통하고 밝은 분.
===================================================================================

• 머플은 코딩을 할 줄 몰라도, 그림을 그릴 줄 몰라도, 음성 녹음 및 음성 연기를 할 줄 몰라도, 자신의 아이디어를 게임으로 만들고 싶어하는 사람들을 위해 게임을 쉽게 개발할 수 있는 Maker Tool을 개발하고 있습니다.

• 유니티 엔지니어로서(유니티로 진행한 개인 프로젝트, 포트폴리오만 있는 신입이라도 좋습니다) 함께 게임 Maker Tool을 개발할 개발자를 찾습니다.

주요업무
• C#, 유니티 UI 프로그래밍
• C#, 유니티를 이용한 2D 게임 개발
• 팀 단위 Agile 방식 개발 및 지속적인 코드 리뷰를 통한 코드 품질 개선

자격요건
• 하나 이상의 프로그래밍 언어에 능숙(C# - 1순위, Java, Python, C++ 등)
• 1개 이상의 유니티 프로젝트 포트폴리오
• 명확한 의사소통 능력 및 오픈 마인드
• 신입 혹은 경력 모두 지원 가능

우대사항
• (경력자 해당시) 유니티 엔지니어 업무 경력
• SW 개발 협업 경험(예: Github, Gitlab)
• 게임 개발 경험 (유니티가 아니어도 좋으며, 개발 규모를 따지지 않음)
• 게임 산업에 대한 관심도 있으신 분: 게임에 대한 배경 지식 및 게임 플레이 경험

혜택 및 복지
• 근무 방식: 
- 유연 근무제(주 40시간): 오전 7시~10시 사이 출근
- 주 1회 재택 근무: 대중교통 기준 출퇴근 왕복 2시간 이상 근로자
- 사무실: 분당선 수내역 도보 1분 
==========================================================================
주요업무
ㆍ교통 디지털트윈 개발

ㆍ교통 디지털트윈 시뮬레이션 개발

ㆍUNITY 엔진을 이용한 통합 시스템 개발

자격요건
-  C#, Unity 3D 에 능숙하신 분

• 유연한 사고능력과 소통, 협업이 원활하신 분

우대사항
ㆍ디지털트윈 프로젝트 개발 경험

ㆍ디지털트윈 시뮬레이션 개발 경험

ㆍ3차원 GIS 서비스 개발 경험 

ㆍUNITY AI 사용 경험
======================================================================================


❤❤❤❤❤❤❤❤❤😘

Unity Client 개발자
마이베네핏
서울.한국

#인원급성장#50명이하#설립4~9년#중식제공#재택근무#IT, 컨텐츠
마이베네핏은 사람들이 더 건강하고 아름다워질 수 있도록 변화와 혁신을 창조하는 기업입니다.
아시아월드짐의 경험과 노하우를 바탕으로 기술력을 더해 ㈜마이베네핏을 설립하였고,
건강 빅데이터를 활용한 미래형 생애주기 건강관리 플랫폼을 제공합니다.

우리는 생활 속에서 건강을 관리하는 가장 편안한 환경과 서비스를
연구하였으며, 상상 속에서 가능한 스마트 건강관리,
사람이 중심이 되는 편안한 서비스를 실현하겠습니다.

주요업무
• 신규 프로젝트 개발 UI part ( 2D, Ui toolkit 개발)
• 기존 프로젝트 유지보수

자격요건
• Unity UI 개발 가능하신 분 (2D UI , UI toolkit)
• C# script 개발 가능하신 분 
• Git 등 형상관리툴에 익숙하신 분 
• 네트워크 관련 개발 경험이 있으신 분

우대사항
• 모션 인식 기반 지식이 있는 분 (Kinet)
• Unity Photon 개발 경험이 있으신 분
• 웹 서비스 관련 이해도가 있으신 분
• Source control / issue tracking / bug tracking 경험이 있으신 분

혜택 및 복지
• 출.퇴근 시간 탄력근무 가능
•07~10시 자율 출근 (8시간 근무)
• 중식제공
• 매주 금요일 재택근무 시행

마감일상시
근무지역서울 서초구 신반포로 지하 241

=============================================================================================

.NET Framework
FCL
CLR
======================================

확장자 CS = C#
========================================
using System;

Class Program
{
Static void Main()
 {
      Console. WriteLine("hello");
 }
}

=============================================
IDE
통합 개발 환경
================================================





대문자 소문자 구분 각별
예약어 사용 불가

====
CDM
=====

cir
C:\Users\PC14>cd .. 상위 폴더로 간다
cd \
========================================
C:\>mkdir csharp=====> 폴더 만듬


==================================
C:\csharp>notepad.exe csharp.txt

C:\csharp>dir
 C 드라이브의 볼륨에는 이름이 없습니다.
 볼륨 일련 번호: FA22-D6A3

 C:\csharp 디렉터리

2023-09-25  오전 10:57    <DIR>          .
2023-09-25  오전 10:57    <DIR>          ..
2023-09-25  오전 10:55                 0 csharp.txt
2023-09-25  오전 10:57                 0 notepad.exe
               2개 파일                   0 바이트
               2개 디렉터리  109,100,404,736 바이트 남음

C:\csharp>

=================================================================


C:\>rd csharp
디렉터리가 비어 있지 않습니다.

C:\>rd /?
디렉터리를 지웁니다.

RMDIR [/S] [/Q] [드라이브:]경로
RD [/S] [/Q] [드라이브:]경로

    /S      지정된 디렉터리 자체와, 그 안의 모든 디렉터리 및 파일을 지웁니다.
            디렉터리 트리를 지우는데 사용합니다.

    /Q      조용한 모드로, /S로 디렉터리 트리를 지우는데 문제가 없으면 다시
            묻지 않습니다.

C:\>rd csharp
디렉터리가 비어 있지 않습니다.

C:\>rd /s csharp
csharp, 계속하시겠습니까(Y/N)? y

C:\>dir
 C 드라이브의 볼륨에는 이름이 없습니다.
 볼륨 일련 번호: FA22-D6A3

 C:\ 디렉터리

 ==========================================================================
 C:\>ren csharp csharp2
 이름변경
 
---------------------------------------------------------------------------
C:\csharp>dotnet new console -o HelloWorld
"Console Application" 템플릿이 성공적으로 생성되었습니다.

-------------------------------------------------------------------------




1.기업소개
더블미는 현실공간에서 AR과 VR이 합쳐진 XR의 Twinworld(현실세계 메타버스 소셜 엔터테인먼트 플랫폼) 서비스를 운영하고 있으며 Twinworld 안에서 광고, 게임, 비즈니스 등 다양한 소셜 엔터테인먼트 및 커머스를 즐길 수 있습니다.
특히, 더블미가 보유한 볼류메트릭 기술(HoloPort)과 Holoscene은 움직이는 물체와 정지된 공간을 실시간 스캔하고 Video GPT는 영상과 사진, 음성 기반의 목적물을 쉽게 추출하는 기술을 보유하고 있습니다.
이러한 서비스와 기술을 활용하여 새로운 경험(체험 전시와 교육, 웰리스 등)을 전세계와 연결하고 무한한 가상 공간을 창조하고 있으며 이를 더케이브(The Cave)에서 시연하고 있습니다.

2.기업비전
더블미는 메타버스 기술로 완전히 새로운 세계 창조 '세계 X.0＇를 추구하며, 새로운 세상을 만드는 건축가, 탐험가를 꿈꾸고 있습니다.

3. 트윈월드 서비스
https://www.oculus.com/experiences/quest/6464922583573383/?ranking_trace=0_6464922583573383_QUESTSEARCH_ec09bbbe-1ea6-4d2c-81d3-91c27cb7b886&utm_source=search.naver.com&utm_medium=oculusredirect

주요업무
• Unity 이용한 메타버스 Twin World 서비스 구축 및 운영
• Hololens 2, Andoid, ISO 버전 개발 및 운영
• 다자간 MR 커뮤니케이션 시스템 설계 및 관리
• MRTK 이용한 MR(Mixed Realtity) 어플리케이션 개발

자격요건
• 경력 :  3년 이상(Unity 개발/운영 경력)
• 학력 : 무관
• 1개 이상 사용자와 상호작용 있는 3D 어플리케이션(게임, 공간 컨텐츠) 개발 경험 있는 분

우대사항
• 컴퓨터공학, 전산, 수학, 물리학 등 이공학 계열을 졸업하신 분
• VR/AR, 멀티미디어, 게임, 융합콘텐츠 계열 전공을 이수한 분
• 게임, 멀티미디어 콘텐츠 관련 대회 수상이나 입선 경험이 있는 분
• 동종업계(VR/AR 콘텐츠 개발) 경력이 있는 분
• 모바일(Andoid, ISO) 어플리케이션 개발 경험이 있거나 가능한 분
• 3D 모델링, 공간 디자인 경헌이 있는 분
• 영어로 업무 커뮤니케이션 가능한 분

혜택 및 복지
* 근무형태 : 정규직 (경력직 수습3개월)
* 근무장소 : 중구 청계천로 24, 13층(케이스퀘어시티)
* 근무시간 : 주5일(월~금), 탄력근무제 (9시~10시 출근 / 18시~19시 퇴근)
* 급여조건 : 능력에 따라 책정
* 복       지 : 
   1. 지원금/보험 : 건강검진, 단체 상해보험
   2. 급여제도 : 퇴직연금, 퇴직금, 4대보험
   3. 선물 : 생일선물, 도서 제공
   4. 생활 : 비플제로페이(점심식대), 간식 및 음료제공
   5. 근무 환경 : 회의실, 공기청정기, 노트북, 사무용품 지급
   6. 조직문화 : 자유로운 연차사용, 칼퇴근 보장, 자유복장
   7. 리프레시 : 연차, 경조휴가제, 근로자의 날 휴무, 대체공휴일 휴무

마감일상시
근무지역서울 중구 청계천로 24 케이스퀘어시티 13층(다동)

=========================================================================================



using System;                   --                  

class HelloWorld
{
    static void Main()
    {

    Console.WriteLine("Hello World");
    }

}



================================================================================================

문자열 = string

==============================================================================================
 Console.WriteLine("Hello \nUNITY");
 줄바꿈
 \n
문자들 사이에 들어가야 함.
 =================================================================================================

 Console.WriteLine("\tunity");

 \t 대부분 4칸씩 띄워줌
\t\t 이렇게 두개 쓰면 8칸 띄워줌
 ======================================

 
"C:\\Users\\PC14\\csharp");

파일 경로를 나타낼 떄

=========================================

Console.WriteLine("\ndong hae mul gwa \n han hong dal do roc\n ~~~~");

    Console.WriteLine(@"
         동해물과 백두산이
         마르고 닳도록
         ~~~~~~~~~");

         알아서 띄울 수 있도록 하는 것

         ================================================================================================================ @@@@@@@ 골벵이 엣



           Console.Write("HellowWorld"); //한줄에 다 써져오네 다음줄로 가는 거 말고 그 자리에 남아있어야 할 떄
            Console.Write("Hellow Unity");

            ===========================================================================================================================================

              Console.WriteLine("Hellow \"C#\"");
            =>  Hellow "C#"
-----------------------------------------------------------------------------------------------------------------------------------------------------------------

Console.WriteLine("{0},{1}", "Hello", "world");

\t \n \"C#\"" 


===================================variable 변수 ===========================================================


            int a; // 변수 선언
            a = 10; // 변수 대입 변수 할당 
            Console.WriteLine(a); //변수 참조

            유니티는 32비트




            2의8승 = 0 ~ 255

             int a, b, c;
            a = b = c = 0;

        #################################    영상을 다룰 땐 byte 사용 0~255 까지만 가능해서.       #################################################

        매서드는 괄호 열고 닫고

        sbyte 는 0 부터 127까지.


      byte는 128 가능

      byte a = 128;

            Console.WriteLine("byte a = {0}", a);

            short b = 128;
            Console.WriteLine("short b = {0}", b);

            int i_max = Int32.MaxValue;
            Console.WriteLine($"{i_max}");


   =============================================         ====> 결과
          byte a = 128
          short b = 128
          2147483647


          
==============================================================================================



 byte a = 128;

            Console.WriteLine("byte a = {0}", a);

            short b = 128;
            Console.WriteLine("short b = {0}", b);

            int i_max = Int32.MaxValue;
            Console.WriteLine($"{i_max}");


            Console.WriteLine("int 최댓값 = {0}", i_max);
            Console.WriteLine($"int 최댓값 = {i_max}");

            sbyte s_max = sbyte.MaxValue;
            sbyte s_min = sbyte.MinValue;

            Console.WriteLine($"sbyte 최댓값 = {s_max}");
            Console.WriteLine($"sbyte 최솟값 = {s_min}");






==> 결과값

byte a = 128
short b = 128
2147483647
int 최댓값 = 2147483647
int 최댓값 = 2147483647
sbyte 최댓값 = 127
sbyte 최솟값 = -128


================================================================================================================================================
             


byte a = 128
short b = 128
2147483647
int 최댓값 = 2147483647
int 최댓값 = 2147483647
sbyte 최댓값 = 127
sbyte 최솟값 = -128
short max = 32767
short min = -32768
long max = 9223372036854775807
long min = -9223372036854775808


================================================================================================================

  byte a = 128;

            Console.WriteLine("byte a = {0}", a);

            short b = 128;
            Console.WriteLine("short b = {0}", b);

            int i_max = Int32.MaxValue;
            Console.WriteLine($"{i_max}");


            Console.WriteLine("int 최댓값 = {0}", i_max);
            Console.WriteLine($"int 최댓값 = {i_max}");

            sbyte s_max = sbyte.MaxValue;
            sbyte s_min = sbyte.MinValue;

            Console.WriteLine($"sbyte 최댓값 = {s_max}");
            Console.WriteLine($"sbyte 최솟값 = {s_min}");


            short short_max = short.MaxValue;
            short short_min = short.MinValue;
            Console.WriteLine($"short max = {short_max}");
            Console.WriteLine($"short min = {short_min}");

            long l_max = long.MaxValue;
            long l_min = long.MinValue;

            Console.WriteLine($"long max = {l_max}");
            Console.WriteLine($"long min = {l_min}");




정수형
          =======================================================================================================================

실수형 




            float flo = 3.141592f;
            double dou = 3.141592;

            Console.WriteLine($"float = {flo}");
            Console.WriteLine($"dou ={dou}");


            float이 메모리적으로 더 효율적이지만 뒤에 f를 붙여야 하는 수고 때문에
            double을 더 많이 쓰인다.

            ================================================================================================================================================================================================================부동 소숫점

            부동소숫점을 사용하면 돈계산할때 불리할 수 있다.

           ***  돈계산 할 때 decimal 사용 권장함 ***

             decimal d1 = 0.1m; 

             decimal 쓸 때 뒤에 m을 붙여줘야 한다.

             decimal d1 = 0.1m;
             decimal d2 = 0.2m;
             Console.WriteLine($"d1+d2 = {d1 + d2}");

          ============> 결과
          d1+d2 = 0.3
=============================================================================================================================================
            

Char
String
Bool



=============  >

=============  >



            // 하나씩 저장하고 싶을 때 


            char type; //변수선언
            type = 'A'; //변수 할당 대입
            Console.WriteLine(type); //변수 참조


            
            char score = 'A';
            // 두글자 쓰면 안 됨 exAB 안됨 ~

            string greet = "Hello";

            string ko_greet ="안녕하세요";
            string en_kr_greet = greet +" " + ko_greet;

            Console.WriteLine(score);
            Console.WriteLine();
            Console.WriteLine($"English = {greet}");
            Console.WriteLine($"Korean = {ko_greet}");
            Console.WriteLine($"Eng_Kor = {en_kr_greet}");


// bool
true of false

================================================
bool tf = true;
            string tf_string = "true";

            Console.WriteLine("bool = {0}", tf);


==> 결과값
bool = True


=============================================================================================================================



            int a = 0;
           
            Console.WriteLine(a);


            a = 100;

            Console.WriteLine(a);
































          






























